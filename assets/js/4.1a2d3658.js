(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{263:function(e,s,a){e.exports=a.p+"assets/img/hero.19139207.jpg"},271:function(e,s,a){"use strict";a.r(s);var t=a(38),r=Object(t.a)({},function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"webpack-基础篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-基础篇","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack 基础篇")]),e._v(" "),t("h2",{attrs:{id:"npm-卸载包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npm-卸载包","aria-hidden":"true"}},[e._v("#")]),e._v(" npm 卸载包")]),e._v(" "),t("p",[e._v("npm uninstall 包名 npm unistall webpack -g -global 全局表示哪都能用")]),e._v(" "),t("h2",{attrs:{id:"初始化项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化项目","aria-hidden":"true"}},[e._v("#")]),e._v(" 初始化项目")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" yarn init -y ||npm init -y\n")])])]),t("h2",{attrs:{id:"webpack-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-安装","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack 安装")]),e._v(" "),t("ul",[t("li",[e._v("webpack4.0")]),e._v(" "),t("li",[e._v("安装本地的 webpack")]),e._v(" "),t("li",[e._v("yarn add webpack webpack-cli -D||npm install webpack webpack-cli -D")]),e._v(" "),t("li",[e._v("-D 表示 development 开发环境")])]),e._v(" "),t("h2",{attrs:{id:"webpack-可以进行-0-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-可以进行-0-配置","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack 可以进行 0 配置")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("目录结构")]),e._v(" "),t("ul",[t("li",[e._v("src\n"),t("ul",[t("li",[e._v("index.js")])])])])]),e._v(" "),t("li",[t("p",[e._v("直接运行 npx webpack")])]),e._v(" "),t("li",[t("p",[e._v("打包工具 -> 输出后的结果(js 模块)")])]),e._v(" "),t("li",[t("p",[e._v("打包（直接 js 的模块化）")])])]),e._v(" "),t("h2",{attrs:{id:"手动配置-webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手动配置-webpack","aria-hidden":"true"}},[e._v("#")]),e._v(" 手动配置 webpack")]),e._v(" "),t("ul",[t("li",[e._v("[x] 默认配置文件的名字是 webpack.config.js/webpackfile.js 通常使用 webpack.config.js")]),e._v(" "),t("li",[e._v("webpack 是基于 node 编写的")])]),e._v(" "),t("h2",{attrs:{id:"配置脚本命令-package-json"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置脚本命令-package-json","aria-hidden":"true"}},[e._v("#")]),e._v(" * 配置脚本命令 package.json")]),e._v(" "),t("ul",[t("li",[e._v('"scripts": { } 这里面配置的命令叫做脚本')]),e._v(" "),t("li",[e._v("-- config 指定默认运行文件是哪个")]),e._v(" "),t("li",[e._v('"build": "webpack --config webpack.config.js",')]),e._v(" "),t("li",[e._v('"dev": "webpack-dev-server"')]),e._v(" "),t("li",[e._v('"start":"npm run dev"')]),e._v(" "),t("li",[e._v("这样就可以通过 npm run dev/npm run build 执行相关的命令")])]),e._v(" "),t("h2",{attrs:{id:"配置出口入口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置出口入口","aria-hidden":"true"}},[e._v("#")]),e._v(" * 配置出口入口")]),e._v(" "),t("ul",[t("li",[e._v("[x]entry 入口 可以是相对路径")]),e._v(" "),t("li",[e._v("[x]output 出口 输出")]),e._v(" "),t("li",[e._v("path 输出路径 必须是绝对路径 打包过后的文件夹名称")]),e._v(" "),t("li",[e._v("filename:打包以后的文件名称")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.exports={\n  entry:'./src/index.js',\n\toutput:{\n\t  path:path.resolve(__dirname,'dist'),\n\t  filename:'bundle[hash:6].js',\n\t  publicPath:'http://www.baidu.com'\n\t }\n}\n")])])]),t("h2",{attrs:{id:"直接给文件加-hash-值-防止浏览器缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#直接给文件加-hash-值-防止浏览器缓存","aria-hidden":"true"}},[e._v("#")]),e._v(" 直接给文件加 hash 值(防止浏览器缓存)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("filename:'bundle[hash].js'\n可以用:后面跟数字设置hash值的长度\nfilename:'bundle[hash:8].js'\n")])])]),t("h2",{attrs:{id:"配置打包环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置打包环境","aria-hidden":"true"}},[e._v("#")]),e._v(" \b* 配置打包环境")]),e._v(" "),t("ul",[t("li",[e._v("mode \b 的值 2 个值 development 和\nproduction")])]),e._v(" "),t("ol",[t("li",[e._v("[x] development 开发环境")]),e._v(" "),t("li",[e._v("[x] production 生产环境")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.exports={\n  mode:'development',\n  ...\n}\n")])])]),t("h2",{attrs:{id:"开发服务器配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发服务器配置","aria-hidden":"true"}},[e._v("#")]),e._v(" * 开发服务器配置")]),e._v(" "),t("ul",[t("li",[e._v("yarn add webpack-dev-server -D||npm install webpack-dev-server")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("devServer:{\n  port:3000, #端口号\n  contentBase:'./dist', #目录 如果没有dist文件夹 会在内存里面自动创建\n  open:true, #是否自动打开浏览器\n  progress:true, #显示进度条\n  compress:true  #是否开启gzip压缩\n  proxy:{\n    //可以配置跨域\n  }\n }\n")])])]),t("h2",{attrs:{id:"处理-html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#处理-html","aria-hidden":"true"}},[e._v("#")]),e._v(" 处理 html")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("src")]),e._v(" "),t("ul",[t("li",[e._v("index.js")]),e._v(" "),t("li",[e._v("index.html")])])]),e._v(" "),t("li",[t("p",[e._v("[x] yarn add html-webpack-plugin -D||npm install html-webpack-plugin")])]),e._v(" "),t("li",[t("p",[e._v("当有插件的时候需要配置 plugins 插件集合类型是数组")])]),e._v(" "),t("li",[t("p",[e._v("每一个插件都是通过 new 来调用，例：new HtmlWebpackPlugin()")])]),e._v(" "),t("li",[t("p",[e._v("可以运行 npm run dev/npm run build 查看结果")])]),e._v(" "),t("li",[t("p",[e._v("装完插件后运行 webpack 会自动引入我们作为入口的 index.js")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("{\n  * template:'./src/index.html',//使用哪里的html做模板\n  * filename:'index.html', //编译后的文件名\n  hash:true,//加hash值\n  minify:{ //压缩配置\n    removeAttributeQuotes:true, //去除双引号\n    collapseWhitespace: true,  //折叠去除空格\n  }\n}\n")])])]),t("h2",{attrs:{id:"处理样式-在-webpack-css-js-img-里面一切皆模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#处理样式-在-webpack-css-js-img-里面一切皆模块","aria-hidden":"true"}},[e._v("#")]),e._v(" 处理样式 在 webpack css,js,img 里面一切皆模块")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("src")]),e._v(" "),t("ul",[t("li",[e._v("index.html")]),e._v(" "),t("li",[e._v("index.js")]),e._v(" "),t("li",[e._v("style.css")])])]),e._v(" "),t("li",[t("p",[e._v(". index.js 通过 require require('/style.css') 报错如下")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("You may need an appropriate loader to handle this file type\nappropriate  合适的\n\b你可能需要一个合适的loader\n")])])]),t("ul",[t("li",[e._v(". 配置 module,配置 rules 数组，表示很多规则，用正在匹配 js、css 等,rules 里面配置不容的 loader,每个 loader 的配置都是一个对象")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module:{\n  rules:[]\n}\n")])])]),t("p",[e._v("loader 的配置方法 test 匹配规则 use 使用什么 loader\nyarn add css-loader style-loader -D||\nnpm install css-loader style-loader -D")]),e._v(" "),t("ul",[t("li",[e._v("test 表示什么文件使用当前的 loader 用正则配置")]),e._v(" "),t("li",[e._v("use 的用法")])]),e._v(" "),t("ol",[t("li",[e._v("字符串 只能写一个 loader\nuse:'css-loader'")]),e._v(" "),t("li",[e._v("数组 可以写多个 loader 数组里面可以放字符串和对象\ncss-loader 解析 require/import 语法\nstyle-loader 把 css 插入到 header 标签中")])]),e._v(" "),t("p",[e._v("use:['style-loader','css-loader']\nloader 的执行顺序是从右到左执行 从下到上")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rules:[\n {\n     test:'/\\.css$/',//匹配以css结尾的文件\n     use:[]\n }\n]\n")])])]),t("ul",[t("li",[e._v(".use 可以直接写 loader，也可以写成对象，写对象的时候可以进行配置\noptions 可以做一些自定义的配置")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" {\n   loader:'style-loader',\n    options:{\n     insertAt:'top'  //css 放置位置可以决定css的优先级\n  }\n")])])]),t("ul",[t("li",[t("p",[e._v("src")]),e._v(" "),t("ul",[t("li",[e._v("index.html")]),e._v(" "),t("li",[e._v("index.js")]),e._v(" "),t("li",[e._v("style.css")]),e._v(" "),t("li",[e._v("b.less")])])]),e._v(" "),t("li",[t("p",[e._v("配置 less 编译(less->css) 因为从右向左，从下到上执行 所以写在下边和右边\nyarn add less less-loader -D")])]),e._v(" "),t("li",[t("p",[e._v("编译 sass\nnode-sass sass-loader -D")])]),e._v(" "),t("li",[t("p",[e._v("编译 stylus\nstylus stylus-loader -D")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  {\n    test:/\\.less$/,\n    use:[\n       'style-loader',\n       'css-loader',\n       'less-loader'\n    ]\n }\n")])])]),t("h2",{attrs:{id:"抽离-css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#抽离-css","aria-hidden":"true"}},[e._v("#")]),e._v(" 抽离 css")]),e._v(" "),t("ul",[t("li",[e._v("[x] yarn add mini-css-extract-plugin -D")]),e._v(" "),t("li",[e._v("MiniCssExtractPlugin 插件自带一个 loader")]),e._v(" "),t("li",[e._v("MiniCssExtractPlugin.loader 会自动把 css 抽离出来 作为引用的方式引入页面 \b\b")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  new MiniCssExtractPlugin({\n      filename: 'main.css' ##抽离出来的css的文件名\n    })\n\n")])])]),t("ul",[t("li",[e._v("[x] 在 loader 里面的写法")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('  use: [MiniCssExtractPlugin.loader, "css-loader"]\n')])])]),t("h2",{attrs:{id:"使用-postcss-loader-autoprefixer-添加浏览器前缀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-postcss-loader-autoprefixer-添加浏览器前缀","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用 postcss-loader,autoprefixer 添加浏览器前缀")]),e._v(" "),t("ul",[t("li",[e._v("[x] yarn add postcss-loader autoprefixer -D")]),e._v(" "),t("li",[e._v("autoprefixer 自动添加浏览器前缀的插件")]),e._v(" "),t("li",[e._v("安装 postcss 插件\nyarn add postcss-preset-env -D 允许使用 css 未来特性的插件")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("{\n  test:/\\.less$/,\n  use:[\n     MiniCssExtractPlugin.loader,\n    'css.loader',\n    'less-loader',\n    'postcss-loader'\n  ]\n}\n")])])]),t("ul",[t("li",[e._v("[x] 需要配置 postcss 默认文件 名字\n在根目录下创建 postcss.config.js/.postcssrc.js")])]),e._v(" "),t("ul",[t("li",[e._v("放到所有 cssloader 后面，执行顺序原因")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" npm run dev 的时候会报错\n Error: No PostCSS Config found in: /Users/ruanye/Desktop/project/src\n 没有找到postcss的默认文件\n")])])]),t("ul",[t("li",[e._v("[x] postcss.config.js 文件里面的内容：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" module.exports={\n    plugins:[require('autoprefixer')]\n  }\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/允许你使用未来的 CSS 特性。\nconst postcssPresetEnv = require('postcss-preset-env');\n// 自动添加浏览器前缀\nconst autoprefixer = require('autoprefixer');\nmodule.exports = {\n    plugins: [\n      postcssPresetEnv,\n      autoprefixer({})\n    ]\n  };\n")])])]),t("ul",[t("li",[e._v("在使用 autoprefixer 做兼容性前缀时，我们要指定浏览器版本来确定在指定版本中添加兼容性前缀。可以在 package.json 中的 browserslist 字段中指定。或者单独建立一个.browserslistrc 文件")])]),e._v(" "),t("h2",{attrs:{id:"处理-js-es6-转化成-es5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#处理-js-es6-转化成-es5","aria-hidden":"true"}},[e._v("#")]),e._v(" 处理 js es6 转化成 es5")]),e._v(" "),t("ul",[t("li",[e._v("[x] yarn add babel-loader @babel/core @babel/preset-env")])]),e._v(" "),t("p",[e._v("@babel/core babel 核心模块\n@babel-preset-env 标准语法转化成低级语法")]),e._v(" "),t("ul",[t("li",[e._v("presets 预设插件 比如定案的 promise 是不会被转化的")]),e._v(" "),t("li",[e._v("yarn add @babel/polyfill 已经废弃")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{\n  "presets": [\n    [\n      "@babel/preset-env",\n      {\n        "useBuiltIns": "entry"  自动注入依赖\n      }\n    ]\n  ]\n}\n')])])]),t("h3",{attrs:{id:"快捷键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快捷键","aria-hidden":"true"}},[e._v("#")]),e._v(" 快捷键")]),e._v(" "),t("p",[e._v("帮助 "),t("code",[e._v("Ctrl + /")]),e._v("\n同步文档 "),t("code",[e._v("Ctrl + S")]),e._v("\n创建文档 "),t("code",[e._v("Ctrl + Alt + N")]),e._v("\n最大化编辑器 "),t("code",[e._v("Ctrl + Enter")]),e._v("\n预览文档 "),t("code",[e._v("Ctrl + Alt + Enter")]),e._v("\n文档管理 "),t("code",[e._v("Ctrl + O")]),e._v("\n系统菜单 "),t("code",[e._v("Ctrl + M")])]),e._v(" "),t("p",[e._v("加粗 "),t("code",[e._v("Ctrl + B")]),e._v("\n插入图片 "),t("code",[e._v("Ctrl + G")]),e._v("\n插入链接 "),t("code",[e._v("Ctrl + L")]),e._v("\n提升标题 "),t("code",[e._v("Ctrl + H")])]),e._v(" "),t("img",{attrs:{src:a(263)}})])},[],!1,null,null,null);s.default=r.exports}}]);